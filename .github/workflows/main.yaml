name: Build

on:
  push:
    branches:
      - 'master'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
        - system: archlinux
          arch: x86_64
          icon: 'ðŸŸ¦'
        - system: windows
          arch: i686
          icon: 'â¬›'
        - system: windows
          arch: x86_64
          icon: 'ðŸŸ¦'

    name: ðŸš§${{ matrix.icon }} ${{ matrix.system }} (${{ matrix.arch }})
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: ./.github/actions/prepare
      with:
        system: ${{ matrix.system }}
        arch:   ${{ matrix.arch   }}

    - uses: ./.github/actions/compile
      with:
        system: ${{ matrix.system }}
        arch:   ${{ matrix.arch   }}

    - uses: ./.github/actions/upload
      if: ${{ !env.ACT }}
      with:
        system: ${{ matrix.system }}
        arch:   ${{ matrix.arch   }}

  create-release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GH_ACCESS_TOKEN }}
          commit: ${{github.event.pull_request.head.sha}}

      - name: Reorganize release files
        run: |
          ls -R
          for i in "i686" "x86_64"; do mv xava-installer-$i.exe xava-installer-$i-win; mv xava-installer-$i-win/xava-installer-$i.exe xava-installer-$i.exe; done
          for i in "x86_64"; do mv xava-$i.AppImage xava-$i-lnx; mv xava-$i-lnx/xava-$i.AppImage xava-$i.AppImage; done

      - name: Read version file
        run: |
          cat version.txt/version.txt
          VER=$(cat version.txt/version.txt)
          echo "VERSION=$VER" >> $GITHUB_ENV

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GH_ACCESS_TOKEN }}"
          automatic_release_tag: ${{ env.VERSION }}
          prerelease: true
          title: "Development Build"
          files: |
            xava-installer-i686.exe
            xava-installer-x86_64.exe
            xava-x86_64.AppImage

  cleanup:
    runs-on: ubuntu-latest
    steps:
    - name: Delete artifacts
      uses: christian-korneck/delete-run-artifacts-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      with:
        parent_runid: ${{ github.event.client_payload.parent_runid  }}
        parent_repo: ${{ github.event.client_payload.parent_repo }}
